### SET FOLDER TO WATCH + FILES TO WATCH + SUBFOLDERS YES/NO
    $filewatcher = New-Object System.IO.FileSystemWatcher
    #Mention the folder to monitor
    $filewatcher.Path = "$(Get-Location)"
    $filewatcher.Filter = "*.JPG"
    #include subdirectories $true/$false
    $filewatcher.IncludeSubdirectories = $true
    $filewatcher.EnableRaisingEvents = $true  
 
### DEFINE ACTIONS AFTER AN EVENT IS DETECTED
    $writeaction = { $path = $Event.SourceEventArgs.FullPath
                if ($path -like '*converted*') {
                    return
                }
                $name = $(Get-Item $path).name
                $changeType = $Event.SourceEventArgs.ChangeType
                $directory = $(Get-Item $path).Directory.FullName
                $logline = "$(Get-Date), $changeType, $path, $directory"
                Add-content "FileWatcher_log.txt" -value $logline

                New-Item -ItemType "directory" -Path "$directory\converted"
                $target_path = "$directory\converted\$name"
                # if (Test-Path $target_path -PathType Leaf) {
                #     Add-content "FileWatcher_log.txt" -value "$path has the same filesize but target_path: $target_path exists"
                #     return
                # }
                # Add-content "FileWatcher_log.txt" -value "$path has the same filesize target_path: $target_path"
                Start-Process -NoNewWindow -Wait -FilePath "C:\Program Files\ImageMagick-7.0.10-Q16\magick.exe" -ArgumentList  "convert", "-strip", "-interlace", "Plane", "-gaussian-blur", "0.05", "-quality", "85%", "$path", "$target_path"
                Start-Process -NoNewWindow -FilePath "D:\pic_from_camera\exiftool" -ArgumentList  "-overwrite_original", "-TagsFromFile", "$path", "-all:all>all:all", "$target_path"
              }
### DECIDE WHICH EVENTS SHOULD BE WATCHED 
 
#The Register-ObjectEvent cmdlet subscribes to events that are generated by .NET objects on the local computer or on a remote computer.
#When the subscribed event is raised, it is added to the event queue in your session. To get events in the event queue, use the Get-Event cmdlet.
    Register-ObjectEvent $filewatcher "Changed" -Action $writeaction
#while ($true) {sleep 5}
