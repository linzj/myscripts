commit 73bee6ec14d5743109eccb1dd56937b689c744f4
Author: lin zuojian <manjian2006@gmail.com>
Date:   Mon May 11 14:27:53 2015 +0800

    i686 asan

diff --git a/configure b/configure
index 35f231e..5c536cc 100755
--- a/configure
+++ b/configure
@@ -6794,7 +6794,7 @@ if test "x$CFLAGS_FOR_TARGET" = x; then
     esac
     case " $CFLAGS " in
       *" -g "* | *" -g3 "*) ;;
-      *) CFLAGS_FOR_TARGET="-g $CFLAGS_FOR_TARGET" ;;
+      *) CFLAGS_FOR_TARGET="-O0 -g $CFLAGS_FOR_TARGET" ;;
     esac
   fi
 fi
@@ -6811,7 +6811,7 @@ if test "x$CXXFLAGS_FOR_TARGET" = x; then
     esac
     case " $CXXFLAGS " in
       *" -g "* | *" -g3 "*) ;;
-      *) CXXFLAGS_FOR_TARGET="-g $CXXFLAGS_FOR_TARGET" ;;
+      *) CXXFLAGS_FOR_TARGET="-O0 -g $CXXFLAGS_FOR_TARGET" ;;
     esac
   fi
 fi
diff --git a/gcc/config/arm/arm.c b/gcc/config/arm/arm.c
index f0fde72..52890d0 100644
--- a/gcc/config/arm/arm.c
+++ b/gcc/config/arm/arm.c
@@ -29810,7 +29810,7 @@ aarch_macro_fusion_pair_p (rtx_insn* prev, rtx_insn* curr)
 static unsigned HOST_WIDE_INT
 arm_asan_shadow_offset (void)
 {
-  return (unsigned HOST_WIDE_INT) 1 << 29;
+  return 0;
 }
 
 
diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
index 91f51d5..87fc436 100644
--- a/gcc/config/i386/i386.c
+++ b/gcc/config/i386/i386.c
@@ -7376,9 +7376,10 @@ ix86_legitimate_combined_insn (rtx_insn *insn)
 static unsigned HOST_WIDE_INT
 ix86_asan_shadow_offset (void)
 {
-  return TARGET_LP64 ? (TARGET_MACHO ? (HOST_WIDE_INT_1 << 44)
-				     : HOST_WIDE_INT_C (0x7fff8000))
-		     : (HOST_WIDE_INT_1 << 29);
+//   return TARGET_LP64 ? (TARGET_MACHO ? (HOST_WIDE_INT_1 << 44)
+// 				     : HOST_WIDE_INT_C (0x7fff8000))
+// 		     : (HOST_WIDE_INT_1 << 29);
+  return 0;
 }
 
 /* Argument support functions.  */
diff --git a/gcc/config/linux-android.h b/gcc/config/linux-android.h
index 301a41c..9adeefd 100644
--- a/gcc/config/linux-android.h
+++ b/gcc/config/linux-android.h
@@ -44,9 +44,7 @@
   "%{!mglibc:%{!muclibc:%{!mbionic: -mbionic}}} "			\
   "%{!fno-pic:%{!fno-PIC:%{!fpic:%{!fPIC: -fPIC}}}}"
 
-#define ANDROID_CC1PLUS_SPEC						\
-  "%{!fexceptions:%{!fno-exceptions: -fno-exceptions}} "		\
-  "%{!frtti:%{!fno-rtti: -fno-rtti}}"
+#define ANDROID_CC1PLUS_SPEC
 
 #define ANDROID_LIB_SPEC \
   "%{!static: -ldl}"
diff --git a/libbacktrace/elf.c b/libbacktrace/elf.c
index 81ba344..b0a51bd 100644
--- a/libbacktrace/elf.c
+++ b/libbacktrace/elf.c
@@ -932,7 +932,7 @@ backtrace_initialize (struct backtrace_state *state, int descriptor,
 
   ret = elf_add (state, descriptor, 0, error_callback, data, &elf_fileline_fn,
 		 &found_sym, &found_dwarf, 1);
-  if (!ret)
+  if (!ret || ret < 0)
     return 0;
 
   pd.state = state;
diff --git a/libbacktrace/fileline.c b/libbacktrace/fileline.c
index 27ebbed..cb84178 100644
--- a/libbacktrace/fileline.c
+++ b/libbacktrace/fileline.c
@@ -53,7 +53,7 @@ fileline_initialize (struct backtrace_state *state,
 		     backtrace_error_callback error_callback, void *data)
 {
   int failed;
-  fileline fileline_fn;
+  fileline fileline_fn = NULL;
   int pass;
   int called_error_callback;
   int descriptor;
@@ -170,7 +170,7 @@ backtrace_pcinfo (struct backtrace_state *state, uintptr_t pc,
   if (!fileline_initialize (state, error_callback, data))
     return 0;
 
-  if (state->fileline_initialization_failed)
+  if (state->fileline_initialization_failed || !state->fileline_fn)
     return 0;
 
   return state->fileline_fn (state, pc, callback, error_callback, data);
diff --git a/libsanitizer/asan/Makefile.am b/libsanitizer/asan/Makefile.am
index 4500e21..5e1728b 100644
--- a/libsanitizer/asan/Makefile.am
+++ b/libsanitizer/asan/Makefile.am
@@ -49,7 +49,7 @@ endif
 if LIBBACKTRACE_SUPPORTED
 libasan_la_LIBADD += $(top_builddir)/libbacktrace/libsanitizer_libbacktrace.la
 endif
-libasan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDFLAGS)
+libasan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDFLAGS) -llog
 
 libasan_la_LDFLAGS = -version-info `grep -v '^\#' $(srcdir)/libtool-version` $(link_libasan)
 
diff --git a/libsanitizer/configure b/libsanitizer/configure
index 040ded0..ab20200 100755
--- a/libsanitizer/configure
+++ b/libsanitizer/configure
@@ -8571,7 +8571,7 @@ if test "${enable_shared+set}" = set; then :
     yes) enable_shared=yes ;;
     no) enable_shared=no ;;
     *)
-      enable_shared=no
+      enable_shared=yes
       # Look at the argument we got.  We use all the common list separators.
       lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
       for pkg in $enableval; do
@@ -15515,7 +15515,7 @@ done
 
 
 # Common libraries that we need to link against for all sanitizer libs.
-link_sanitizer_common='-lpthread -lm'
+link_sanitizer_common='-ldl -lm'
 
 # At least for glibc, shm_open is in librt.  But don't pull that
 # in if it still doesn't give us the function we want.  This
diff --git a/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc b/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc
index 5e83ce9..601717c 100644
--- a/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc
+++ b/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc
@@ -2296,6 +2296,7 @@ PRE_SYSCALL(ni_syscall)() {}
 
 POST_SYSCALL(ni_syscall)(long res) {}
 
+#if !SANITIZER_ANDROID
 PRE_SYSCALL(ptrace)(long request, long pid, long addr, long data) {
 #if !SANITIZER_ANDROID && \
     (defined(__i386) || defined(__x86_64) || defined(__mips64) || \
@@ -2343,6 +2344,7 @@ POST_SYSCALL(ptrace)(long res, long request, long pid, long addr, long data) {
   }
 #endif
 }
+#endif
 
 PRE_SYSCALL(add_key)(const void *_type, const void *_description,
                      const void *_payload, long plen, long destringid) {
diff --git a/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc b/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
index a1f0432..fa3caf1 100644
--- a/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
+++ b/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
@@ -71,12 +71,6 @@ COMPILER_CHECK(struct_kernel_stat_sz == sizeof(struct stat));
 COMPILER_CHECK(struct_kernel_stat64_sz == sizeof(struct stat64));
 #endif
 
-CHECK_TYPE_SIZE(io_event);
-CHECK_SIZE_AND_OFFSET(io_event, data);
-CHECK_SIZE_AND_OFFSET(io_event, obj);
-CHECK_SIZE_AND_OFFSET(io_event, res);
-CHECK_SIZE_AND_OFFSET(io_event, res2);
-
 #if !SANITIZER_ANDROID
 COMPILER_CHECK(sizeof(struct __sanitizer_perf_event_attr) <=
                sizeof(struct perf_event_attr));
@@ -91,14 +85,5 @@ COMPILER_CHECK(iocb_cmd_preadv == IOCB_CMD_PREADV);
 COMPILER_CHECK(iocb_cmd_pwritev == IOCB_CMD_PWRITEV);
 #endif
 
-CHECK_TYPE_SIZE(iocb);
-CHECK_SIZE_AND_OFFSET(iocb, aio_data);
-// Skip aio_key, it's weird.
-CHECK_SIZE_AND_OFFSET(iocb, aio_lio_opcode);
-CHECK_SIZE_AND_OFFSET(iocb, aio_reqprio);
-CHECK_SIZE_AND_OFFSET(iocb, aio_fildes);
-CHECK_SIZE_AND_OFFSET(iocb, aio_buf);
-CHECK_SIZE_AND_OFFSET(iocb, aio_nbytes);
-CHECK_SIZE_AND_OFFSET(iocb, aio_offset);
 
 #endif  // SANITIZER_LINUX
diff --git a/libstdc++-v3/config/os/bionic/ctype_base.h b/libstdc++-v3/config/os/bionic/ctype_base.h
index 33978f3..4d114f8 100644
--- a/libstdc++-v3/config/os/bionic/ctype_base.h
+++ b/libstdc++-v3/config/os/bionic/ctype_base.h
@@ -27,6 +27,16 @@
 //
 
 // Information as gleaned from /usr/include/ctype.h
+#if !defined(_U)
+#define	_U	0x01
+#define	_L	0x02
+#define	_N	0x04
+#define	_S	0x08
+#define	_P	0x10
+#define	_C	0x20
+#define	_X	0x40
+#define	_B	0x80
+#endif
 
 namespace std _GLIBCXX_VISIBILITY(default)
 {
diff --git a/libstdc++-v3/libsupc++/guard.cc b/libstdc++-v3/libsupc++/guard.cc
index 9b61799..c6623a7 100644
--- a/libstdc++-v3/libsupc++/guard.cc
+++ b/libstdc++-v3/libsupc++/guard.cc
@@ -33,7 +33,11 @@
 #if defined(__GTHREADS) && defined(__GTHREAD_HAS_COND) \
   && (ATOMIC_INT_LOCK_FREE > 1) && defined(_GLIBCXX_HAVE_LINUX_FUTEX)
 # include <climits>
+# ifndef __ANDROID__
 # include <syscall.h>
+# else
+# include <sys/syscall.h>
+# endif
 # include <unistd.h>
 # define _GLIBCXX_USE_FUTEX
 # define _GLIBCXX_FUTEX_WAIT 0
diff --git a/libstdc++-v3/src/c++11/futex.cc b/libstdc++-v3/src/c++11/futex.cc
index 7598960..df909fe 100644
--- a/libstdc++-v3/src/c++11/futex.cc
+++ b/libstdc++-v3/src/c++11/futex.cc
@@ -27,7 +27,11 @@
 #if defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1
 #include <chrono>
 #include <climits>
-#include <syscall.h>
+# ifndef __ANDROID__
+# include <syscall.h>
+# else
+# include <sys/syscall.h>
+# endif
 #include <unistd.h>
 #include <sys/time.h>
 #include <errno.h>
diff --git a/libstdc++-v3/src/filesystem/dir.cc b/libstdc++-v3/src/filesystem/dir.cc
index 9a63c4a..b28c134 100644
--- a/libstdc++-v3/src/filesystem/dir.cc
+++ b/libstdc++-v3/src/filesystem/dir.cc
@@ -144,7 +144,7 @@ fs::_Dir::advance(error_code* ec, directory_options options)
   if (ec)
     ec->clear();
 
-  int err = std::exchange(errno, 0);
+  volatile int err = std::exchange(errno, 0);
   const auto entp = readdir(dirp);
   std::swap(errno, err);
 
diff --git a/ltmain.sh b/ltmain.sh
index 9503ec8..6db31ed 100644
--- a/ltmain.sh
+++ b/ltmain.sh
@@ -7087,7 +7087,7 @@ EOF
 	*) new_libs="$new_libs $deplib" ;;
 	esac
       done
-      deplibs="$new_libs"
+      deplibs="-lgcc $new_libs"
 
       # All the library-specific variables (install_libdir is set above).
       library_names=
