commit a87625307a8baef6640ca1c7fdc037fad2094d05
Author: lin zuojian <manjian2006@gmail.com>
Date:   Tue Dec 5 15:10:59 2017 +0800

    asan 9.2

diff --git a/configure b/configure
index abd93a990a9..9217051304f 100755
--- a/configure
+++ b/configure
@@ -6839,7 +6839,7 @@ if test "x$CFLAGS_FOR_TARGET" = x; then
     esac
     case " $CFLAGS " in
       *" -g "* | *" -g3 "*) ;;
-      *) CFLAGS_FOR_TARGET="-g $CFLAGS_FOR_TARGET" ;;
+      *) CFLAGS_FOR_TARGET="-O0 -g $CFLAGS_FOR_TARGET" ;;
     esac
   fi
 fi
@@ -6856,7 +6856,7 @@ if test "x$CXXFLAGS_FOR_TARGET" = x; then
     esac
     case " $CXXFLAGS " in
       *" -g "* | *" -g3 "*) ;;
-      *) CXXFLAGS_FOR_TARGET="-g $CXXFLAGS_FOR_TARGET" ;;
+      *) CXXFLAGS_FOR_TARGET="-O0 -g $CXXFLAGS_FOR_TARGET" ;;
     esac
   fi
 fi
diff --git a/gcc/config.gcc b/gcc/config.gcc
index ddd3b8f4d9d..0889e5d5389 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1022,8 +1022,9 @@ aarch64*-*-freebsd*)
 	tm_defines="${tm_defines}  TARGET_DEFAULT_ASYNC_UNWIND_TABLES=1"
 	;;
 aarch64*-*-linux*)
-	tm_file="${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h"
+	tm_file="${tm_file} dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-linux.h"
+	extra_options="${extra_options} linux-android.opt"
 	tmake_file="${tmake_file} aarch64/t-aarch64 aarch64/t-aarch64-linux"
 	tm_defines="${tm_defines}  TARGET_DEFAULT_ASYNC_UNWIND_TABLES=1"
 	case $target in
diff --git a/gcc/config/aarch64/aarch64-linux.h b/gcc/config/aarch64/aarch64-linux.h
index 5e8b34ded03..e1700bf7db6 100644
--- a/gcc/config/aarch64/aarch64-linux.h
+++ b/gcc/config/aarch64/aarch64-linux.h
@@ -62,22 +62,33 @@
   " %{mfix-cortex-a53-843419:--fix-cortex-a53-843419}"
 #endif
 
-#define LINK_SPEC LINUX_TARGET_LINK_SPEC \
+#define LINK_SPEC LINUX_OR_ANDROID_LD (LINUX_TARGET_LINK_SPEC,				\
+		       LINUX_TARGET_LINK_SPEC " " ANDROID_LINK_SPEC) \
                   CA53_ERR_835769_SPEC \
                   CA53_ERR_843419_SPEC
 
+#undef	STARTFILE_SPEC
+#define STARTFILE_SPEC \
+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_STARTFILE_SPEC, ANDROID_STARTFILE_SPEC)
+
 #define GNU_USER_TARGET_MATHFILE_SPEC \
   "%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s}"
 
 #undef ENDFILE_SPEC
-#define ENDFILE_SPEC   \
-  GNU_USER_TARGET_MATHFILE_SPEC " " \
-  GNU_USER_TARGET_ENDFILE_SPEC
+#define ENDFILE_SPEC \
+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_MATHFILE_SPEC " " \
+      GNU_USER_TARGET_ENDFILE_SPEC, ANDROID_ENDFILE_SPEC)
+
+#undef  LIB_SPEC
+#define LIB_SPEC							\
+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LIB_SPEC,			\
+		    GNU_USER_TARGET_NO_PTHREADS_LIB_SPEC " " ANDROID_LIB_SPEC)
 
 #define TARGET_OS_CPP_BUILTINS()		\
   do						\
     {						\
 	GNU_USER_TARGET_OS_CPP_BUILTINS();	\
+	ANDROID_TARGET_OS_CPP_BUILTINS();		\
     }						\
   while (0)
 
diff --git a/gcc/config/arm/arm.c b/gcc/config/arm/arm.c
index 45abcd89963..a6f64825a1c 100644
--- a/gcc/config/arm/arm.c
+++ b/gcc/config/arm/arm.c
@@ -339,7 +339,7 @@ static const struct attribute_spec arm_attribute_table[] =
      addressing range.  */
   { "short_call",   0, 0, false, true,  true,  false, NULL, NULL },
   /* Specify the procedure call conventions for a function.  */
-  { "pcs",          1, 1, false, true,  true,  false, arm_handle_pcs_attribute,
+  { "pcs",          1, 1, false, true,  true,  true, arm_handle_pcs_attribute,
     NULL },
   /* Interrupt Service Routines have special prologue and epilogue requirements.  */
   { "isr",          0, 1, false, false, false, false, arm_handle_isr_attribute,
@@ -30634,7 +30634,7 @@ arm_sched_can_speculate_insn (rtx_insn *insn)
 static unsigned HOST_WIDE_INT
 arm_asan_shadow_offset (void)
 {
-  return HOST_WIDE_INT_1U << 29;
+  return 0;
 }
 
 
diff --git a/gcc/config/arm/t-linux-androideabi b/gcc/config/arm/t-linux-androideabi
index 8f1307c557f..f92d4bcfa72 100644
--- a/gcc/config/arm/t-linux-androideabi
+++ b/gcc/config/arm/t-linux-androideabi
@@ -1,6 +1,12 @@
-MULTILIB_OPTIONS     = march=armv7-a mthumb
+MULTILIB_OPTIONS     = marm/mthumb
 MULTILIB_DIRNAMES    = armv7-a thumb
-MULTILIB_EXCEPTIONS  =
+MULTILIB_OPTIONS     += march=armv7-a
+MULTILIB_DIRNAMES    += v7-a
+MULTILIB_OPTIONS     += mfpu=neon
+MULTILIB_DIRNAMES    += neon
+MULTILIB_OPTIONS     += mfloat-abi=softfp
+MULTILIB_DIRNAMES    += softfp
+MULTILIB_REQUIRED    = mthumb/march=armv7-a/mfpu=neon/mfloat-abi=softfp
 MULTILIB_MATCHES     =
 MULTILIB_OSDIRNAMES  =
 
diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
index 2b37296e537..5d11fb88719 100644
--- a/gcc/config/i386/i386.c
+++ b/gcc/config/i386/i386.c
@@ -6902,9 +6902,10 @@ ix86_legitimate_combined_insn (rtx_insn *insn)
 static unsigned HOST_WIDE_INT
 ix86_asan_shadow_offset (void)
 {
-  return TARGET_LP64 ? (TARGET_MACHO ? (HOST_WIDE_INT_1 << 44)
-				     : HOST_WIDE_INT_C (0x7fff8000))
-		     : (HOST_WIDE_INT_1 << 29);
+//   return TARGET_LP64 ? (TARGET_MACHO ? (HOST_WIDE_INT_1 << 44)
+// 				     : HOST_WIDE_INT_C (0x7fff8000))
+// 		     : (HOST_WIDE_INT_1 << 29);
+  return 0;
 }
 
 /* Argument support functions.  */
diff --git a/gcc/config/linux-android.h b/gcc/config/linux-android.h
index 1dc0277d329..93ebcda353b 100644
--- a/gcc/config/linux-android.h
+++ b/gcc/config/linux-android.h
@@ -50,9 +50,7 @@
   "%{!mglibc:%{!muclibc:%{!mbionic: -mbionic}}} "			\
   "%{!fno-pic:%{!fno-PIC:%{!fpic:%{!fPIC: -fPIC}}}}"
 
-#define ANDROID_CC1PLUS_SPEC						\
-  "%{!fexceptions:%{!fno-exceptions: -fno-exceptions}} "		\
-  "%{!frtti:%{!fno-rtti: -fno-rtti}}"
+#define ANDROID_CC1PLUS_SPEC
 
 #define ANDROID_LIB_SPEC \
   "%{!static: -ldl}"
diff --git a/gcc/lto/lto-partition.c b/gcc/lto/lto-partition.c
index 6972e6e9ef3..4efdbb1e1f7 100644
--- a/gcc/lto/lto-partition.c
+++ b/gcc/lto/lto-partition.c
@@ -147,6 +147,8 @@ add_symbol_to_partition_1 (ltrans_partition part, symtab_node *node)
   if (c == SYMBOL_PARTITION && !DECL_COMDAT (node->decl)
       && symbol_partitioned_p (node))
     return false;
+  if (c == SYMBOL_EXTERNAL)
+    return true;
 
   /* Be sure that we never try to duplicate partitioned symbol
      or add external symbol.  */
diff --git a/libbacktrace/elf.c b/libbacktrace/elf.c
index f3988ec02a0..32f5e121a8e 100644
--- a/libbacktrace/elf.c
+++ b/libbacktrace/elf.c
@@ -3390,7 +3390,7 @@ backtrace_initialize (struct backtrace_state *state, const char *filename,
   ret = elf_add (state, filename, descriptor, 0, error_callback, data,
 		 &elf_fileline_fn, &found_sym, &found_dwarf, NULL, 1, 0, NULL,
 		 0);
-  if (!ret)
+  if (!ret || ret < 0)
     return 0;
 
   pd.state = state;
diff --git a/libbacktrace/fileline.c b/libbacktrace/fileline.c
index 369c9deed1b..68e923e4d34 100644
--- a/libbacktrace/fileline.c
+++ b/libbacktrace/fileline.c
@@ -54,7 +54,7 @@ fileline_initialize (struct backtrace_state *state,
 		     backtrace_error_callback error_callback, void *data)
 {
   int failed;
-  fileline fileline_fn;
+  fileline fileline_fn = NULL;
   int pass;
   int called_error_callback;
   int descriptor;
@@ -177,7 +177,7 @@ backtrace_pcinfo (struct backtrace_state *state, uintptr_t pc,
   if (!fileline_initialize (state, error_callback, data))
     return 0;
 
-  if (state->fileline_initialization_failed)
+  if (state->fileline_initialization_failed || !state->fileline_fn)
     return 0;
 
   return state->fileline_fn (state, pc, callback, error_callback, data);
diff --git a/libsanitizer/asan/Makefile.am b/libsanitizer/asan/Makefile.am
index 867240d2445..8b98c1d3bc5 100644
--- a/libsanitizer/asan/Makefile.am
+++ b/libsanitizer/asan/Makefile.am
@@ -57,7 +57,7 @@ endif
 if LIBBACKTRACE_SUPPORTED
 libasan_la_LIBADD += $(top_builddir)/libbacktrace/libsanitizer_libbacktrace.la
 endif
-libasan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDFLAGS)
+libasan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDFLAGS) -llog
 
 libasan_la_LDFLAGS = -version-info `grep -v '^\#' $(srcdir)/libtool-version` $(link_libasan)
 
diff --git a/libsanitizer/asan/asan_premap_shadow.cc b/libsanitizer/asan/asan_premap_shadow.cc
index 4273ae5e389..535b9a6ef10 100644
--- a/libsanitizer/asan/asan_premap_shadow.cc
+++ b/libsanitizer/asan/asan_premap_shadow.cc
@@ -70,7 +70,7 @@ decltype(__asan_shadow)* __asan_premap_shadow() {
 
 // __asan_shadow is a "function" that has the same address as the first byte of
 // the shadow mapping.
-INTERFACE_ATTRIBUTE __attribute__((ifunc("__asan_premap_shadow"))) void
+INTERFACE_ATTRIBUTE void
 __asan_shadow();
 }
 
diff --git a/libsanitizer/configure b/libsanitizer/configure
index 226da62cf5a..218f0517009 100755
--- a/libsanitizer/configure
+++ b/libsanitizer/configure
@@ -8872,7 +8872,7 @@ if test "${enable_shared+set}" = set; then :
     yes) enable_shared=yes ;;
     no) enable_shared=no ;;
     *)
-      enable_shared=no
+      enable_shared=yes
       # Look at the argument we got.  We use all the common list separators.
       lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
       for pkg in $enableval; do
@@ -15814,7 +15814,7 @@ done
 
 
 # Common libraries that we need to link against for all sanitizer libs.
-link_sanitizer_common='-lpthread -lm'
+link_sanitizer_common='-ldl -lm'
 
 # At least for glibc, shm_open is in librt.  But don't pull that
 # in if it still doesn't give us the function we want.  This
diff --git a/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc b/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc
index 6fd5ef74274..c9633b50331 100644
--- a/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc
+++ b/libsanitizer/sanitizer_common/sanitizer_common_syscalls.inc
@@ -2292,6 +2292,7 @@ PRE_SYSCALL(ni_syscall)() {}
 
 POST_SYSCALL(ni_syscall)(long res) {}
 
+#if !SANITIZER_ANDROID
 PRE_SYSCALL(ptrace)(long request, long pid, long addr, long data) {
 #if !SANITIZER_ANDROID && \
     (defined(__i386) || defined(__x86_64) || defined(__mips64) || \
@@ -2339,6 +2340,7 @@ POST_SYSCALL(ptrace)(long res, long request, long pid, long addr, long data) {
   }
 #endif
 }
+#endif
 
 PRE_SYSCALL(add_key)(const void *_type, const void *_description,
                      const void *_payload, long plen, long destringid) {
diff --git a/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc b/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
index 3a906538129..3cff2211e51 100644
--- a/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
+++ b/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
@@ -77,12 +77,6 @@ COMPILER_CHECK(struct_kernel_stat_sz == sizeof(struct stat));
 COMPILER_CHECK(struct_kernel_stat64_sz == sizeof(struct stat64));
 #endif
 
-CHECK_TYPE_SIZE(io_event);
-CHECK_SIZE_AND_OFFSET(io_event, data);
-CHECK_SIZE_AND_OFFSET(io_event, obj);
-CHECK_SIZE_AND_OFFSET(io_event, res);
-CHECK_SIZE_AND_OFFSET(io_event, res2);
-
 #if !SANITIZER_ANDROID
 COMPILER_CHECK(sizeof(struct __sanitizer_perf_event_attr) <=
                sizeof(struct perf_event_attr));
@@ -97,14 +91,5 @@ COMPILER_CHECK(iocb_cmd_preadv == IOCB_CMD_PREADV);
 COMPILER_CHECK(iocb_cmd_pwritev == IOCB_CMD_PWRITEV);
 #endif
 
-CHECK_TYPE_SIZE(iocb);
-CHECK_SIZE_AND_OFFSET(iocb, aio_data);
-// Skip aio_key, it's weird.
-CHECK_SIZE_AND_OFFSET(iocb, aio_lio_opcode);
-CHECK_SIZE_AND_OFFSET(iocb, aio_reqprio);
-CHECK_SIZE_AND_OFFSET(iocb, aio_fildes);
-CHECK_SIZE_AND_OFFSET(iocb, aio_buf);
-CHECK_SIZE_AND_OFFSET(iocb, aio_nbytes);
-CHECK_SIZE_AND_OFFSET(iocb, aio_offset);
 
 #endif  // SANITIZER_LINUX
diff --git a/libstdc++-v3/config/os/bionic/ctype_base.h b/libstdc++-v3/config/os/bionic/ctype_base.h
index 6d60dcd518f..cb15669d280 100644
--- a/libstdc++-v3/config/os/bionic/ctype_base.h
+++ b/libstdc++-v3/config/os/bionic/ctype_base.h
@@ -27,6 +27,16 @@
 //
 
 // Information as gleaned from /usr/include/ctype.h
+#if !defined(_U)
+#define	_U	0x01
+#define	_L	0x02
+#define	_N	0x04
+#define	_S	0x08
+#define	_P	0x10
+#define	_C	0x20
+#define	_X	0x40
+#define	_B	0x80
+#endif
 
 namespace std _GLIBCXX_VISIBILITY(default)
 {
diff --git a/libstdc++-v3/libsupc++/guard.cc b/libstdc++-v3/libsupc++/guard.cc
index 2bf20c6f304..6bf0440c38e 100644
--- a/libstdc++-v3/libsupc++/guard.cc
+++ b/libstdc++-v3/libsupc++/guard.cc
@@ -34,7 +34,11 @@
 #if defined(__GTHREADS) && defined(__GTHREAD_HAS_COND) \
   && (ATOMIC_INT_LOCK_FREE > 1) && defined(_GLIBCXX_HAVE_LINUX_FUTEX)
 # include <climits>
+# ifndef __ANDROID__
 # include <syscall.h>
+# else
+# include <sys/syscall.h>
+# endif
 # include <unistd.h>
 # define _GLIBCXX_USE_FUTEX
 # define _GLIBCXX_FUTEX_WAIT 0
diff --git a/libstdc++-v3/src/c++11/futex.cc b/libstdc++-v3/src/c++11/futex.cc
index 3ea32f752bb..ad02800bdf7 100644
--- a/libstdc++-v3/src/c++11/futex.cc
+++ b/libstdc++-v3/src/c++11/futex.cc
@@ -27,7 +27,11 @@
 #if defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1
 #include <chrono>
 #include <climits>
-#include <syscall.h>
+# ifndef __ANDROID__
+# include <syscall.h>
+# else
+# include <sys/syscall.h>
+# endif
 #include <unistd.h>
 #include <sys/time.h>
 #include <errno.h>
diff --git a/ltmain.sh b/ltmain.sh
index 79f9ba89af5..1b68c7801ec 100644
--- a/ltmain.sh
+++ b/ltmain.sh
@@ -7087,7 +7087,7 @@ EOF
 	*) new_libs="$new_libs $deplib" ;;
 	esac
       done
-      deplibs="$new_libs"
+      deplibs="-lgcc $new_libs"
 
       # All the library-specific variables (install_libdir is set above).
       library_names=
